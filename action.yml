name: "Continuous Delivery and Continuous Deployment Package Convention"
description: "Trip Teknologi's Continuous Delivery and Continuous Deployment Package Convention"
author: "Trip Teknologi"
inputs:
  token:
    required: true
    description: "Token"
  repotoken:
    required: true
    description: "Repository Token"
  repouser:
    required: true
    description: "Repository User"
  repository:
    required: true
    description: "Repository Address"
  language:
    required: true
    description: "Target of Language Artifact"
  artifact:
    required: true
    description: "Target of Version Artifact"
outputs:
  version:
    value: ${{ steps.version.outputs.version }}
    description: "Version of Artifact"
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - id: version
      uses: tripteki/version@1.0.0
      with:
        token: ${{ inputs.token }}
        artifact: ${{ inputs.artifact }}
    - id: php
      if: ${{ steps.version.outputs.passes == 'true' && inputs.language == 'php' }}
      shell: sh
      run: |
        package ()
        {
          event=$1
          curl -v -H "Content-Type: application/json" -X POST "https://packagist.org/api/$event-package?"'username='${{ inputs.repouser }}'&apiToken='${{ inputs.repotoken }} -d '{"repository":{"url":"'${{ github.repositoryUrl }}'"}}'
        }
        package create
        package update
    - if: ${{ steps.version.outputs.passes == 'true' && inputs.language == 'js' }}
      uses: actions/setup-node@v3
      with:
        node-version: "16"
    - if: ${{ steps.version.outputs.passes == 'true' && inputs.language == 'js' }}
      shell: sh
      run: npm install
    - id: js
      if: ${{ steps.version.outputs.passes == 'true' && inputs.language == 'js' }}
      uses: JS-DevTools/npm-publish@v1
      with:
        token: ${{ inputs.repotoken }}
        registry: ${{ inputs.repository }}
    - if: ${{ steps.version.outputs.passes == 'true' && inputs.language == 'py' }}
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - if: ${{ steps.version.outputs.passes == 'true' && inputs.language == 'py' }}
      shell: sh
      run: python -m pip install build --user && python -m build --sdist --wheel --outdir dist/
    - id: py
      if: ${{ steps.version.outputs.passes == 'true' && inputs.language == 'py' }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: ${{ inputs.repouser }}
        password: ${{ inputs.repotoken }}
        repository_url: ${{ inputs.repository }}
        verbose: true
